<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 切记: 配置要是不成功, 千万不要心态爆炸 -->

    <!-- 1.配置数据库相关参数 -->
    <context:property-placeholder location="classpath:mybatis/database.properties"/>
    <!-- 2. 配置数据库连接池 -->
    <!-- destroy-method 是什么意思? -->
    <bean id="abstractDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- 数据库连接池相关参数 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 连接获取失败重新尝试的次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--主数据库 -->
    <bean id="master" parent="abstractDataSource">
        <!-- 数据库相关参数 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.master.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--从数据库 -->
    <bean id="slave" parent="abstractDataSource">
        <!-- 数据库相关参数 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.slave.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--动态数据源对象 -->
    <bean id="dynamicDataSource" class="com.o2o.dao.split.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <!--数据源对象本事是 master, 此前设置的 key 也叫 master -->
                <entry value-ref="master" key="master"/>
                <entry value-ref="slave" key="slave"/>
            </map>
        </property>
    </bean>
    <!-- 真正的数据源对象: 这里使用的是 Spring 自带的数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="dynamicDataSource"/>
    </bean>
    <!-- 3.配置 SqlSessionFactory 对象: 用于创建 SqlSession -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 整合 Mybatis 文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!-- 启用别名机制 -->
        <property name="typeAliasesPackage" value="com.o2o.entity"/>
        <!-- 扫描 Mapper 文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4. 动态扫描: 动态实现 dao 接口, 并且注入到 Spring 容器中 -->
    <bean id="configurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.o2o.dao"/>
    </bean>

</beans>